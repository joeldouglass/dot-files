# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# set mouse mode
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# Key Timeout
set -s escape-time 0

setw -g monitor-activity on
set -g visual-activity on

# use the vim motion keys to move between panes
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

# Keep current path for new windows/panes
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# use vim style keys while in copy mode
setw -g mode-keys vi

bind P paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-selection

# use the vim resize keys.
# the number at the end is how much the pane will be resized,
# and 1 is fairly small -- you might want to tweak this.
bind < resize-pane -L 10
bind > resize-pane -R 10

# bind - resize-pane -D 10
bind + resize-pane -U 10

set -g base-index 1
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left "#[fg=yellow] #H"
set-option -g status-left-length 30 
set-option -g status-right-length 90
set-option -g status-right "#[fg=blue] #(date  \"+%R %d/%m/%y\"")

# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# default statusbar colors
# Old Style
#set-option -g status-bg black #base02
#set-option -g status-fg yellow #yellow
#set-option -g status-attr default
# New Style
set-option -g status-style bg=black,fg=yellow

# default window title colors
# Old Style
#set-window-option -g window-status-fg brightblue #base0
#set-window-option -g window-status-bg default
# New Style
set-window-option -g window-status-style fg=brightblue #base0
#set-window-option -g window-status-attr dim

# active window title colors
# Old Style
#set-window-option -g window-status-current-fg brightred #orange
#set-window-option -g window-status-current-bg default
# New Style
set-window-option -g window-status-current-style fg=brightred #base0
#set-window-option -g window-status-current-attr bright

# pane border
# Old Style
#set-option -g pane-border-fg green #base02
# New Style
set-option -g pane-border-style fg=green #base0
# Old Style
#set-option -g pane-active-border-fg brightgreen #base01
# New Style
set-option -g pane-active-border-style fg=brightgreen #base0

# message text
# Old Style
#set-option -g message-bg black #base02
#set-option -g message-fg brightred #orange
# New Style
set-option -g pane-active-border-style bg=black,fg=brightred #base0

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
